scalar PositiveInt
scalar PositiveFloat

type Query {
    allAnnualWorkingHours: [AnnualWorkingHours]!
    annualWorkingHoursByYear(year: Int!): [AnnualWorkingHours]!
    annualWorkingHoursByCountryAbbrev(countryAbbrev: String!): [AnnualWorkingHours]!
    annualWorkingHoursByCountryName(countryName: String!): [AnnualWorkingHours]!
}

type Mutation {
    addAnnualWorkingHours(annualWorkingHours: NewAnnualWorkingHours!): AnnualWorkingHours
    removeAnnualWorkingHours(countryAbbrev: String!, year: Int!): Boolean
}

type AnnualWorkingHours {
    countryName: String!
    countryAbbrev: String!
    year: Int!
    hours: Float!
}

input NewAnnualWorkingHours {
    countryName: String!
    countryAbbrev: String!
    year: PositiveInt!
    hours: PositiveFloat!
}